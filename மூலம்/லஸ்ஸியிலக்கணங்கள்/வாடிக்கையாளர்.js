const fs = require('fs')
const கோப்புரை = 'இலக்கணங்கள்'

const கோப்புரை_பெறு = கோ => fs.readdirSync(கோ, { withFileTypes: true }).filter(கோ => கோ.isDirectory()).map(கோ => கோ.name)

const _மொழித்தகவல்கோப்பு = (மொழி) => `${கோப்புரை}/${மொழி}/தகவல்கள்.json`
const _மொழிபெயர்ப்புகோப்பு = (மொழி) => `${கோப்புரை}/${மொழி}/மொழிபெயர்ப்புகள்.json`

export const நிரல்மொழிகள் = கோப்புரை_பெறு(கோப்புரை).filter(இ => இ != '__pycache__').filter(இ => fs.existsSync(_மொழித்தகவல்கோப்பு(இ)) && fs.existsSync(_மொழிபெயர்ப்புகோப்பு(இ)))

const தகவல்கள் = நிரல்மொழிகள்.reduce((முன், தற்) => ({ ...முன், [தற்]: JSON.parse(fs.readFileSync(_மொழித்தகவல்கோப்பு(தற்))) }), {})

const மொழிபெயர்ப்புகள் =  நிரல்மொழிகள்.reduce((முன், தற்) => ({ ...முன், [தற்]: JSON.parse(fs.readFileSync(_மொழிபெயர்ப்புகோப்பு(தற்))) }), {})

export const பதிப்பு_கண்டறி = (நிரல்மொழி) => Object.keys(தகவல்கள்[நிரல்மொழி]['பதிப்பு'] || {"":""}).slice(-1)[0]

export const விதிகள் = function (நிரல்மொழி, பதிப்பு=undefined) {
   பதிப்பு = பதிப்பு || பதிப்பு_கண்டறி(நிரல்மொழி)
   return மொழிபெயர்ப்புகள்[நிரல்மொழி]["பதிப்புகள்"][பதிப்பு]
}
export const விதி_மொழிபெயர்ப்பு = function (நிரல்மொழி, மொழி, விதி) {
   return மொழிபெயர்ப்புகள்[நிரல்மொழி]["விதிகள்"][விதி]["பெயர்ப்பு"][மொழி]
}
export const நிறைவு = function (நிரல்மொழி, மொழி, பதிப்பு=undefined) {
    பதிப்பு = பதிப்பு || பதிப்பு_கண்டறி(நிரல்மொழி)
    let விதி_நிரல்மொழி = விதிகள்(நிரல்மொழி, பதிப்பு)
    let _விதி_மொழிபெயர்ப்பு = விதி_நிரல்மொழி.map(இ => விதி_மொழிபெயர்ப்பு(நிரல்மொழி, மொழி, இ)).filter(இ => இ)
    return _விதி_மொழிபெயர்ப்பு.length / விதி_நிரல்மொழி.length
}

export const பெயர் = (நிரல்மொழி, மொழி) => {
  return மொழிபெயர்ப்புகள்[நிரல்மொழி]["பெயர்"][மொழி]
}

export const இயற்கை_மொழிகள் = (நிரல்மொழி) => {
  let மொழிகள் = Object.values(மொழிபெயர்ப்புகள்[நிரல்மொழி]["விதிகள்"]).map(இ => Object.keys(இ["பெயர்ப்பு"])).filter(இ => இ.length)
  return [...new Set([].concat(...மொழிகள்))]

}